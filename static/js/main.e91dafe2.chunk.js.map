{"version":3,"sources":["firebase/firebase-config.js","routers/PrivateRoute.js","routers/PublicRoute.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/loading/LoadingScreen.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","PrivateRoute","isAuth","Component","component","rest","props","to","PublicRoute","types","setError","err","type","payload","removeError","uiStartLoading","uiFinishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","addNewNote","note","activeNote","setNotes","startLoadingNotes","dispatch","startSaveNote","getState","url","noteToFirestore","doc","update","then","Swal","fire","refreshNote","deleteNote","login","displayName","logout","useForm","initialState","useState","formValues","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","email","password","useSelector","state","ui","msgError","loading","className","onSubmit","e","preventDefault","validator","isEmail","length","signInWithEmailAndPassword","user","catch","message","finally","startLoginEmailPassword","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","RegisterScreen","password2","isFormValid","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPassWordName","AuthRouter","exact","path","NotesAppBar","active","style","display","files","title","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","toLowerCase","background","speed","width","height","loop","autoplay","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoadingScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e91dafe2.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAHBuyuajA-XRMfz3rSVjwT30h1JXFj63A',\n  authDomain: 'react-curso-fh-9f212.firebaseapp.com',\n  projectId: 'react-curso-fh-9f212',\n  storageBucket: 'react-curso-fh-9f212.appspot.com',\n  messagingSenderId: '996264269425',\n  appId: '1:996264269425:web:72544c4b5fa0348a8a2dd0',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, googleAuthProvider, firebase };\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuth ? <Component {...props} /> : <Redirect to='/auth/login' />\n      }\n    />\n  );\n};\nPrivateRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuth ? <Component {...props} /> : <Redirect to='/' />\n      }\n    />\n  );\n};\nPublicRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","export const types = {\n  login: '[Auth] Login',\n  logout: '[Auth] Logout',\n\n  uiSetError: '[UI] Set Error',\n  uiRemoveError: '[UI] Remove Error',\n\n  uiStartLoading: '[UI] Start loading',\n  uiFinishLoading: '[UI] Finish loading',\n\n  notesAddNew: '[Notes] New note',\n  notesActive: '[Notes] Set active',\n  notesLoad: '[Notes] Load note',\n  notesUpdated: '[Notes] Updated note',\n  notesFileUrl: '[Notes] Updated image url',\n  notesDelete: '[Notes] Deleted note',\n  notesLogoutCleaning: '[Notes] Logout cleaning',\n};\n","import { types } from '../types/types';\n\nexport const setError = (err) => ({\n  type: types.uiSetError,\n  payload: err,\n});\n\nexport const removeError = () => ({\n  type: types.uiRemoveError,\n});\nexport const uiStartLoading = () => ({\n  type: types.uiStartLoading,\n});\nexport const uiFinishLoading = () => ({\n  type: types.uiFinishLoading,\n});\n","export const fileUpload = async (file) => {\n  const cloudUrl = 'https://api.cloudinary.com/v1_1/dzhmdjkld/upload';\n\n  const formData = new FormData();\n\n  formData.append('upload_preset', 'react-journal');\n  formData.append('file', file);\n\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: 'Post',\n      body: formData,\n    });\n\n    if (resp.ok) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      throw await resp.json();\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n","import { db } from \"../firebase/firebase-config\"\n\nexport const loadNotes = async (uid) => {\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get()\n    const notes = [];\n\n    notesSnap.forEach(snapHijo =>{\n        notes.push({\n            id:snapHijo.id,\n            ...snapHijo.data()\n        })\n    })\n\n    return notes\n}","import Swal from 'sweetalert2';\nimport { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types';\n\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime(),\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n    dispatch(addNewNote(doc.id, newNote));\n  };\n};\n\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note,\n  },\n});\n\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note,\n  },\n});\n\nexport const setNotes = (notes) => ({\n  type: types.notesLoad,\n  payload: notes,\n});\nexport const startLoadingNotes = (uid) => {\n  return async (dispatch) => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\n\nexport const startSaveNote = (note) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    if (!note.url) {\n      delete note.url;\n    }\n    const noteToFirestore = { ...note };\n    delete noteToFirestore.id;\n\n    await db\n      .doc(`${uid}/journal/notes/${note.id}`)\n      .update(noteToFirestore)\n      .then(\n        Swal.fire('Saved', 'Your note have been saved correctly', 'success')\n      );\n    dispatch(refreshNote(note.id, note));\n  };\n};\n\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: { id, note },\n});\n\nexport const startUploading = (file) => {\n  return async (dispatch, getState) => {\n    const { active: activeNote } = getState().notes;\n\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Waiting for the data to upload',\n      allowOutsideClick: false,\n      showConfirmButton: false,\n      willOpen: () => {\n        Swal.showLoading();\n      },\n    });\n\n    const fileUrl = await fileUpload(file);\n\n    activeNote.url = fileUrl;\n\n    dispatch(startSaveNote(activeNote));\n  };\n};\n\nexport const startDeleting = (id) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\n\n\nexport const deleteNote = (id) => ({\n  type: types.notesDelete,\n  payload: id,\n});\n\nexport const notesLogout = () => ({\n  type: types.notesLogoutCleaning,\n});\n","import Swal from 'sweetalert2';\nimport { types } from '../types/types';\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { uiStartLoading, uiFinishLoading } from './ui';\nimport { notesLogout } from './notes';\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    dispatch(uiStartLoading());\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch((e) => {\n        Swal.fire('Error:', e.message, 'error');\n      })\n      .finally(() => {\n        dispatch(uiFinishLoading());\n      });\n  };\n};\n\nexport const startRegisterWithEmailPassWordName = (email, password, name) => {\n  return (dispatch) => {\n    dispatch(uiStartLoading());\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch((e) => {\n        Swal.fire('Error:', e.message, 'error');\n      })\n      .finally(() => {\n        dispatch(uiFinishLoading());\n      });\n  };\n};\n\nexport const startGoogleLogin = () => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n  },\n});\n\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    dispatch(logout());\n    dispatch(notesLogout());\n  };\n};\n\nexport const logout = () => ({\n  type: types.logout,\n});\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [formValues, setValues] = useState(initialState);\n\n  const reset = (newFormState = initialState) => {\n    setValues(newFormState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  return [formValues, handleInputChange, reset];\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { removeError, setError } from '../../actions/ui';\nimport validator from 'validator';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange] = useForm({\n    email: '',\n    password: '',\n  });\n\n\n\n  const { email, password } = formValues;\n\n  const isFormValid = () => {\n    if (!validator.isEmail(email)) {\n      dispatch(setError('Email is not valid'));\n      return false;\n    } else if (password.length < 5) {\n      dispatch(setError('Password is not valid'));\n      return false;\n    }\n    dispatch(removeError());\n    return true;\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    if (isFormValid()) {\n      dispatch(startLoginEmailPassword(email, password));\n    }\n  };\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  };\n  const {msgError, loading} = useSelector((state) => state.ui);\n\n  return (\n    <>\n      <h3 className='auth__title'>Login</h3>\n      <form onSubmit={handleLogin} className='animate__animated animate__fadeIn animate__faster'>\n      { msgError &&\n            (<div className='auth__alert-error'>\n              {msgError}\n            </div>)\n         }\n        <input\n          className='auth__input'\n          type='text'\n          placeholder='Email'\n          name='email'\n          autoComplete='off'\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          className='auth__input'\n          type='password'\n          placeholder='Password'\n          name='password'\n          value={password}\n          onChange={handleInputChange}\n        />\n        <button className='btn btn-primary btn-block' type='submit' disabled={loading}>\n          Login\n        </button>\n\n        <div className='auth__social-network'>\n          <p>Login with nocial networks</p>\n          <div className='google-btn' onClick={handleGoogleLogin}>\n            <div className='google-icon-wrapper'>\n              <img\n                className='google-icon'\n                src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\n                alt='google button'\n              />\n            </div>\n            <p className='btn-text'>\n              <b>Sign in with google</b>\n            </p>\n          </div>\n        </div>\n        <Link className='link' to='/auth/register'>\n          Create new account\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\n\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { startRegisterWithEmailPassWordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n  const dispatch = useDispatch();\n  const { msgError } = useSelector((state) => state.ui);\n  const [formValues, handleInputChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formValues;\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (isFormValid()) {\n      dispatch(startRegisterWithEmailPassWordName(email, password, name));\n    }\n  };\n\n  const isFormValid = () => {\n    if (name.trim().length === 0) {\n      dispatch(setError('Name is required'));\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(setError('Email is not valid'));\n      return false;\n    } else if (password !== password2 || password.length < 5) {\n      dispatch(setError('Passwords are not valid'));\n      return false;\n    }\n    dispatch(removeError());\n    return true;\n  };\n\n  return (\n    <>\n      <h3 className='auth__title'>Register</h3>\n      <form onSubmit={handleRegister} className='animate__animated animate__fadeIn animate__faster'>\n        {msgError && <div className='auth__alert-error'>{msgError}</div>}\n        <input\n          className='auth__input'\n          type='text'\n          placeholder='Name'\n          name='name'\n          autoComplete='off'\n          onChange={handleInputChange}\n          value={name}\n        />\n        <input\n          className='auth__input'\n          type='text'\n          placeholder='Email'\n          name='email'\n          autoComplete='off'\n          onChange={handleInputChange}\n          value={email}\n        />\n        <input\n          className='auth__input'\n          type='password'\n          placeholder='Password'\n          name='password'\n          onChange={handleInputChange}\n          value={password}\n        />\n        <input\n          className='auth__input'\n          type='password'\n          placeholder='Confirm password'\n          name='password2'\n          onChange={handleInputChange}\n          value={password2}\n        />\n        <button className='btn btn-primary btn-block mb-5' type='submit'>\n          Register\n        </button>\n        <Link className='link' to='/auth/login'>\n          Already registered?\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n  const dispatch = useDispatch();\n  const { active } = useSelector((state) => state.notes);\n  const handleSaveNote = () => {\n    dispatch(startSaveNote(active));\n  };\n\n  const handlePictureClick = () => {\n    document.querySelector('#fileSelector').click();\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploading(file));\n    }\n  };\n\n  return (\n    <div className='notes__appbar'>\n      <span>12 de julio de 2021</span>\n      <input\n        id='fileSelector'\n        type='file'\n        name='file'\n        style={{ display: 'none' }}\n        onChange={handleFileChange}\n      />\n\n      <div>\n        <button className='btn' onClick={handlePictureClick}>\n          Picture\n        </button>\n\n        <button className='btn' onClick={handleSaveNote}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar';\n\nexport const NoteScreen = () => {\n  const { active: note } = useSelector((state) => state.notes);\n  const [formValues, handleInputChange, reset] = useForm(note);\n\n  const { body, title, id } = formValues;\n\n  const activeId = useRef(note.id);\n\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id;\n    }\n  }, [note, reset]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(activeNote(formValues.id, { ...formValues }));\n  }, [dispatch, formValues]);\n\n  const handleDelete = () => {\n    dispatch(startDeleting(id));\n  };\n\n  return (\n    <div className='notes__main-content'>\n      <NotesAppBar />\n      <div className='notes__content'>\n        <input\n          type='text'\n          placeholder='Some awesome title'\n          className='notes__title-input'\n          autoComplete='off'\n          name='title'\n          value={title}\n          onChange={handleInputChange}\n        />\n        <hr />\n        <textarea\n          placeholder='What happened today'\n          className='notes__textarea'\n          name='body'\n          value={body}\n          onChange={handleInputChange}\n        ></textarea>\n        {note.url && (\n          <div className='notes__image'>\n            <img src={note.url} alt='incendio' />\n          </div>\n        )}\n      </div>\n      {title.trim().toLowerCase() ===\n        'arrebatao dando vuelta en la jeepeta' && (\n        <lottie-player\n          src='https://assets5.lottiefiles.com/packages/lf20_wlwdpk1w.json'\n          background='transparent'\n          speed='1'\n          style={{ width: 500, height: 500 }}\n          loop\n          autoplay\n        ></lottie-player>\n      )}\n      <button className='btn btn-danger' onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NothingSelected = () => {\n  return (\n    <div className='nothing__main-content'>\n      <p>\n        Select something <br /> Or create an entry\n      </p>\n      <lottie-player\n        src='https://assets8.lottiefiles.com/packages/lf20_2qmtqq0y.json'\n        background='transparent'\n        speed='1'\n        style={{ width: 300, height: 300 }}\n        loop\n        autoplay\n      ></lottie-player>\n    </div>\n  );\n};\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n  const dispatch = useDispatch()\n\n  const noteDate = moment(date);\n\n\n  const handleEntryClick = () => {\n    dispatch(activeNote(id,{\n      date,title,body,url\n    } ))\n  };\n\n  return (\n    <div className='journal__entry pointer' onClick={handleEntryClick}>\n      {url && (\n        <div\n          className='journal__entry-pictre'\n          style={{\n            backgroundSize: 'cover',\n            backgroundImage: `url(${url})`,\n          }}\n        ></div>\n      )}\n\n      <div className='journal__entry-body'>\n        <p className='journal__entry-title'>{title}</p>\n        <p className='journal__entry-content'>{body}</p>\n      </div>\n      <div className='journal__entry-date-box'>\n        <span>{noteDate.format('dddd')}</span>\n        <h4>{noteDate.format('Do')}</h4>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { JournalEntry } from \"./JournalEntry\";\n\nexport const JournalEntries = () => {\n  \nconst {notes} = useSelector(state => state.notes)\n  return (\n    <div className=\"journal__entries\">\n      {notes.map((note) => (\n        <JournalEntry \n          key={note.id}\n          {...note} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n  const { name } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  const handleAddNewEntry = () => {\n    dispatch( startNewNote() )\n  }\n  return (\n    <aside className='journal__sidebar'>\n      <div className='journal__sidebar-navbar'>\n        <h3 className='mt-5'>\n          <i className='far fa-moon'></i>\n          <span> {name}</span>\n        </h3>\n        <button className='btn' onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n      <div className='journal__new-entry' onClick={handleAddNewEntry}>\n        <i className='far fa-calendar-plus fa-5x'></i>\n        <p className='mt-5'>New entry</p>\n      </div>\n      <JournalEntries />\n    </aside>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar';\n\nexport const JournalScreen = () => {\n\n  const {active} = useSelector(state => state.notes)\n\n  return (\n    <div className=\"journal__main-content\">\n      <Sidebar />\n      <main>\n        {\n          (active)\n          ?(<NoteScreen />)\n          :(<NothingSelected />)\n        }\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const LoadingScreen = () => {\n  return (\n    <div className='loading__main'>\n      <p className='loading__text animate__animated animate__pulse'>\n        Loading...\n      </p>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { firebase } from '../firebase/firebase-config';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { AuthRouter } from './AuthRouter';\n\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { LoadingScreen } from '../components/loading/LoadingScreen';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const [checking, setChecking] = useState(true);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName));\n        setIsLoggedIn(true);\n        dispatch(startLoadingNotes(user.uid));\n      } else {\n        setIsLoggedIn(false);\n      }\n      setChecking(false);\n    });\n  }, [dispatch]);\n\n  if (checking) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            isAuth={isLoggedIn}\n            path='/auth'\n            component={AuthRouter}\n          />\n          <PrivateRoute\n            isAuth={isLoggedIn}\n            exact\n            path='/'\n            component={JournalScreen}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from '../types/types';\n\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.notesActive:\n      return {\n        ...state,\n        active: {\n          ...action.payload,\n        },\n      };\n\n    case types.notesAddNew:\n      return{\n        ...state,\n        notes:[action.payload, ...state.notes]\n      }\n      \n    case types.notesLoad:\n      return {\n        ...state,\n        notes: [...action.payload],\n      };\n    case types.notesUpdated:\n      return {\n        ...state,\n        notes: state.notes.map((note) =>\n          note.id === action.payload.id ? action.payload.note : note\n        ),\n      };\n    case types.notesDelete:\n      return {\n        ...state,\n        active: null,\n        notes: state.notes.filter((note) => note.id !== action.payload),\n      };\n    case types.notesLogoutCleaning:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  notes: [],\n  active: null,\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading:false,\n    msgError:null\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\nswitch (action.type) {\n    case types.uiSetError:\n        return{\n            ...state,\n            msgError: action.payload\n        }\n        \n    case types.uiRemoveError:\n        return{\n            ...state,\n            msgError:null\n        }\n\n    case types.uiStartLoading:\n        return{\n            ...state,\n            loading:true\n        }\n    case types.uiFinishLoading:\n            return{\n                ...state,\n                loading:false\n            }\n    \n    default:\n        return state\n}\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName,\n      };\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { JournalApp } from \"./JournalApp\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(<JournalApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}